library Init {
    

    function onInit() {
        ShowInterface(false, 0);
        EnableUserControl(true);


        TimerStart(CreateTimer(), 0, false, function() {
            integer i;
            framehandle fa, fb;
            real w, h;
            DestroyTimer(GetExpiredTimer());

            SetFrameAllPoints(GetOriginFrame(ORIGIN_FRAME_WORLD_FRAME, 0), GetOriginFrame(ORIGIN_FRAME_GAME_UI, 0));

            ShowFrame(GetOriginFrame(ORIGIN_FRAME_TIME_OF_DAY_INDICATOR, 0), false);
            ShowFrame(GetOriginFrame(ORIGIN_FRAME_MINIMAP, 0), false);
            ShowFrame(GetOriginFrame(ORIGIN_FRAME_PORTRAIT, 0), false);

            for (0 <= i <= 4) ShowFrame(GetOriginFrame(ORIGIN_FRAME_MINIMAP_BUTTON, i), false);
            for (0 <= i <= 3) ShowFrame(GetOriginFrame(ORIGIN_FRAME_SYSTEM_BUTTON, i), false);
            for (0 <= i <= 6) ShowFrame(GetOriginFrame(ORIGIN_FRAME_HERO_HP_BAR, i), false);

            fa = GetOriginFrame(ORIGIN_FRAME_COMMAND_BUTTON, 0);
            w = GetFrameWidth(fa);
            h = GetFrameHeight(fa);
            ClearFrameAllPoints(fa);

            // command button
            SetFrameAbsolutePoint(fa, FRAMEPOINT_BOTTOMLEFT, .0, .0);
            SetFrameSize(fa, w, h);

            for (1 <= i <= 11) {
                fa = GetOriginFrame(ORIGIN_FRAME_COMMAND_BUTTON, i-1);
                fb = GetOriginFrame(ORIGIN_FRAME_COMMAND_BUTTON, i);
                ClearFrameAllPoints(fb);
                SetFrameSize(fb, w, h);
                SetFrameRelativePoint(fb, FRAMEPOINT_LEFT, fa, FRAMEPOINT_RIGHT, 0, 0);
            }

            /*
            INFO_BAR -> CSimpleFontString ищи в дочерних фреймах.
            CSimpleFontString если что расширяет CSimpleRegion, не CSimpleFrame.
            Потому можешь проверять все дочерние фреймы через IsFrameSimpleRegion.
            */

            fa = null;
            fb = null;
        });
    }
}